# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
- name: RunTests
  default: false
- name: DockerRegistryEndpoint
  displayName: 'The name of the service connection representing the Docker registry to push to.'
  type: string
  default: "vidinet Docker Registry"

trigger: none
pr: none

pool:
    vmImage: 'ubuntu-20.04'

jobs:
- job: RunTests
  steps:

  - template: azure-pipelines-test.yml  # Template reference
    parameters:
      RunTests: ${{ parameters.RunTests }}
      HelmVersions:
      - version: "3.10.3"
      - version: "3.11.3"
      - version: "3.12.3"
      - version: "3.13.2"


- job: CreateRelease
  dependsOn: RunTests
  steps:
  - script: |
        export HULL_VSADDON_VERSION=`sed -n 's/^version:\s//p' ./hull-vidispine-addon/Chart.yaml | sed 's/\"//g'` 
        echo "-> hull-vidispine-addon version is ${HULL_VSADDON_VERSION}"
        echo "##vso[task.setvariable variable=HULL_VSADDON_VERSION;]${HULL_VSADDON_VERSION}"
        echo "-Y set hull-integration version to ${HULL_VSADDON_VERSION}"
        sed -i -e "s/<HULL-VIDISPINE-ADDON-VERSION>/$HULL_VSADDON_VERSION/g" ./hull-vidispine-addon/hull-vidispine-addon.yaml
  - task: Docker@0
    displayName: 'Docker Build'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: '${{ parameters.DockerRegistryEndpoint }}'
      dockerFile: './images/hull-integration/Dockerfile'
      defaultContext: false
      context: './images/hull-integration'
      imageName: 'hull/hull-integration:$(HULL_VSADDON_VERSION)'
 
  - task: Docker@0
    displayName: 'Docker Push'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: '${{ parameters.DockerRegistryEndpoint }}'
      action: 'Push an image'
      imageName: 'hull/hull-integration:$(HULL_VSADDON_VERSION)'

  - task: Docker@0
    displayName: 'Docker Build noroot'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: '${{ parameters.DockerRegistryEndpoint }}'
      dockerFile: './images/hull-integration/Dockerfile-noroot'
      defaultContext: false
      context: './images/hull-integration'
      imageName: 'hull/hull-integration:$(HULL_VSADDON_VERSION)-noroot'
 
  - task: Docker@0
    displayName: 'Docker Push'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: '${{ parameters.DockerRegistryEndpoint }}'
      action: 'Push an image'
      imageName: 'hull/hull-integration:$(HULL_VSADDON_VERSION)-noroot'

  - script: |
        CHART_RELEASER_VERSION=1.5.0
        set -euo pipefail
        echo package chart
        cp -r . $(Agent.TempDirectory)
        cd $(Agent.TempDirectory)        
        wget https://github.com/helm/chart-releaser/releases/download/v${CHART_RELEASER_VERSION}/chart-releaser_${CHART_RELEASER_VERSION}_linux_amd64.tar.gz
        tar -xvzf chart-releaser_${CHART_RELEASER_VERSION}_linux_amd64.tar.gz -C ./
        ls
        sudo chmod +x ./cr
        sudo ./cr package ./hull-vidispine-addon 
        sudo ./cr upload --git-repo hull-vidispine-addon --owner vidispine --token $(GITHUBTOKEN) || true
        mkdir .cr-index
        wget https://vidispine.github.io/hull-vidispine-addon/index.yaml -O .cr-index/index.yaml
        sudo ./cr index --git-repo hull-vidispine-addon --owner vidispine --token $(GITHUBTOKEN) --charts-repo https://vidispine.github.io/hull-vidispine-addon --push 
